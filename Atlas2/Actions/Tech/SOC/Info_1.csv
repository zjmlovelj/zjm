Function,Inputs,Outputs,Retry,RetryHandler,OnError,SubSubTest,Conditions,ReturnOnFail,Notes
Parameters,,MLB_Num,,,,,,,
,,slotNum,,,,,,,
,,SITE,,,,,,,
,,boardRev,,,,,,,
Tech/DUTCmd>sendCmdAndParse,"{subsubtestname=""Send-Disable_UART_CMD""}",,,,,,,,"disable uart"
,"+{dutPluginName=""Kis_dut""}",,,,,,,,
,"+{channelPluginName=""Kis_channelPlugin""}",,,,,,,,
,"+{Commands=""consolesinkctrl --sink uart --dis""}",,,,,,,,
,"+{Timeout=""10""}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Fixture>sendFixtureCommand,"{subsubtestname=""Disconnect-Debug_UART""}",,,,,,,,"disconnect to UART_TX"
,"+{Commands=""relay_switch""}",,,,,,,,
,"+{args=""UART_TX;disconnect""}",,,,,,,,
,"+{slotNum=slotNum}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Fixture>sendFixtureCommand,"{subsubtestname=""Set-VBUS_OCP-3A5""}",,,,,,,,"set VBUS OCP to 3.5A"
,"+{Commands=""relay_switch""}",,,,,,,,
,"+{args=""VBUS_OCP_3A5;SET""}",,,,,,,,
,"+{slotNum=slotNum}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Fixture>sendFixtureCommand,"{subsubtestname=""Set-VBATT_OCP-6A""}",,,,,,,,"Set VBATT OCP to 6A"
,"+{Commands=""relay_switch""}",,,,,,,,
,"+{args=""VBATT_OCP_6A;SET""}",,,,,,,,
,"+{slotNum=slotNum}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/DUTCmd>sendCmdAndParse,"{subsubtestname=""Read-BOARD_ID""}",BOARD_ID,,,,,,,boardid command
,"+{dutPluginName=""Kis_dut""}",boardid_resp,,,,,,,
,"+{channelPluginName=""Kis_channelPlugin""}",,,,,,,,
,"+{attribute=""Board_ID_DFU""}",,,,,,,,
,"+{pattern=""Board Id: (0x[0-9A-Fa-f]+)""}",,,,,,,,
,"+{Timeout=""5""}",,,,,,,,
,"+{Commands=""boardid command""}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/DUTInfo>CheckMLBType,"{subsubtestname=""Check-MLB_Type""}",mlb_type,,,,,,,"J820 MLB_B = 0x0E,J820 MLB_A = 0x0C,J817 MLB_B = 0x0E;J817 MLB_A = 0x08"
,"+{Input=boardid_resp}",,,,,,,,
,"+{mlb_a=""0x08;0x10;0x0C""}",,,,,,,,
,"+{mlb_b=""0x0E;0x0A""}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>parseWithRegexString,"{subsubtestname=""Read-Storage_Device_Number""}",HAS_TWO_STORAGE_DEVICE,,,,,,,"check there is one NAND or 2 NAND from kis_usb.log"
,"+{pattern=""number of storage devices 2""}",,,,,,,,
,"+{Check_Storage=""YES""}",,,,,,,,
,"+{log_device=""kis_usb""}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/DUTCmd>sendCmdAndParse,"{subsubtestname=""Send-Chip_CMD""}",chipid_resp,,,,,,,"Read Chip ID"
,"+{dutPluginName=""Kis_dut""}",,,,,,,,
,"+{channelPluginName=""Kis_channelPlugin""}",,,,,,,,
,"+{Timeout=""3""}",,,,,,,,
,"+{Commands=""chipid""}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>parseWithRegexString,"{subsubtestname=""Read-Chip_ID""}",Chip_ID,,,,,,,"Read SOC CHIP ID DFU"
,"+{attribute=""SOC_CHIP_ID_DFU""}",,,,,,,,
,"+{pattern=""Chip%s*ID:%s*(%w+)%s*Version: ""}",,,,,,,,
,"+{Input=chipid_resp}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>parseWithRegexString,"{subsubtestname=""Read-Chip_Ver""}",Chip_Ver,,,,,,,"Read Chip Ver"
,"+{attribute=""SOC_CHIP_VERSION_DFU""}",,,,,,,,
,"+{pattern=""Version:%s*([0-9a-zA-Z.]+)""}",,,,,,,,
,"+{Input=chipid_resp}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>parseWithRegexString,"{subsubtestname=""Read-DIE_ID""}",DIE_ID,,,,,,,"Read DIE ID"
,"+{attribute=""SOC_DIE_ID_DFU""}",,,,,,,,
,"+{pattern=""Die%s*ID:%s*([0-9A-Z:]+)""}",,,,,,,,
,"+{Input=chipid_resp}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>parseWithRegexString,"{subsubtestname=""Read-FUSE_ID""}",FUSE_ID,,,,,,,"Read FUSE_ID"
,"+{attribute=""SOC_FUSE_ID_DFU""}",,,,,,,,
,"+{pattern=""Fuse%s*ID:%s*([0-9A-Z:]+)""}",,,,,,,,
,"+{Input=chipid_resp}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>parseWithRegexString,"{subsubtestname=""Read-SOC_ECID""}",ECID,,,,,,,"Read ECID"
,"+{attribute=""SOC_ECID""}",,,,,,,,
,"+{pattern=""ECID%s*:%s*(0x[0-9A-F]+)""}",,,,,,,,
,"+{Input=chipid_resp}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>uploadAttributeToSFC,"{subsubtestname=""Upload-SOC_ECID""}",,,,,,,,"Upload ECID to SFC"
,"+{BoardRev=boardRev}",,,,,,,,
,"+{MLB_Num=MLB_Num}",,,,,,,,
,"+{sfc_value=ECID}",,,,,,,,
,"+{sfc_key=""ecid""}",,,,,,,,
,"+{ADD_Type=""ADD_ATTR""}",,,,,,,,
,"+{sfc_path=""/vault/data_collection/test_station_config/gh_station_info.json""}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/DUTCmd>sendCmdAndParse,"{subsubtestname=""Read-SOC_Binning-Revision""}",binning_revision,,,,,,,"print SoC information and pattern Binning-Revision"
,"+{dutPluginName=""Kis_dut""}",soc_p_resp,,,,,,,
,"+{channelPluginName=""Kis_channelPlugin""}",,,,,,,,
,"+{attribute=""SOC_Binning-Revision""}",,,,,,,,
,"+{pattern=""binning%-revision:%s*(%w+)""}",,,,,,,,
,"+{Timeout=""5""}",,,,,,,,
,"+{Commands=""soc -p""}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>parseWithRegexString,"{subsubtestname=""Read-Chip_Revision""}",,,,,,,,"config SOC_Chip_Revision"
,"+{attribute=""SOC_CHIP_REVISION""}",,,,,,,,
,"+{pattern=""revision: ([0-9A-Z]+)""}",,,,,,,,
,"+{Input=soc_p_resp}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>parseWithRegexString,"{subsubtestname=""Read-Fuse_Revision""}",fuse_rev,,,,,,,"config Fuse_Revision"
,"+{attribute=""SOC_FUSE_REVISION""}",,,,,,,,
,"+{pattern=""fuse%-rev: ([0-9A-Z]+)""}",,,,,,,,
,"+{Input=soc_p_resp}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>parseWithRegexString,"{subsubtestname=""Read-Production_Mode""}",production_mode,,,,,,,"Read production mode"
,"+{attribute=""SOC_PRODUCTION""}",,,,,,,,
,"+{pattern=""production%-mode:%s*([0-9]+)""}",,,,,,,,
,"+{Input=soc_p_resp}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>getSFCQuery,"{subsubtestname=""Read-Production_Mode_SFC""}",Production_Mode_SFC,,,,,SITE=="FXCD",,"get Production Mode for SFC"
,"+{sfc_key=""soc_fusing""}",,,,,,,,
,"+{MLB_Num=MLB_Num}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Compare>CompareInfo,"{subsubtestname=""Compare-Production_Mode""}",,,,,,SITE == "FXCD",,"Compare Production_Mode with local and SFC"
,"+{firstVaule=production_mode}",,,,,,,,
,"+{sencondVaule=Production_Mode_SFC}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Tech/Common>parseWithRegexString,"{subsubtestname=""Read-DRAM_Vendor""}",,,,,,,,"read memory vendor"
,"+{attribute=""DRAM_Vendor""}",,,,,,,,
,"+{pattern=""dram%-memory%-vendor:%s+([a-zA-Z]+)%s+""}",,,,,,,,
,"+{log_device=""kis_usb""}",,,,,,,,
,"+{record=""false""}",,,,,,,,
Returns,BOARD_ID,,,,,,,,
,mlb_type,,,,,,,,
,HAS_TWO_STORAGE_DEVICE,,,,,,,,
,Chip_ID,,,,,,,,
,Chip_Ver,,,,,,,,
,DIE_ID,,,,,,,,
,FUSE_ID,,,,,,,,
,ECID,,,,,,,,
,binning_revision,,,,,,,,
,soc_p_resp,,,,,,,,
,fuse_rev,,,,,,,,
,production_mode,,,,,,,,